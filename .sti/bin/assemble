#!/bin/bash

# Source code provided to STI is at ${HOME}/source
LOCAL_SOURCE_DIR=${HOME}/source
mkdir -p $LOCAL_SOURCE_DIR

# The dir that contains the build output
if [ -z "$OUTPUT_DIR" ]; then
  export OUTPUT_DIR="$LOCAL_SOURCE_DIR/target"
elif [[ $OUTPUT_DIR != /* ]]; then
  export OUTPUT_DIR="$LOCAL_SOURCE_DIR/$OUTPUT_DIR"
fi

DEPLOY_DIR=/opt/openshift/app
mkdir -p $DEPLOY_DIR

# Copy the source for compilation
cp -ad /opt/openshift/destination/* $LOCAL_SOURCE_DIR

# If a pom.xml is present, this is a normal build scenario
# so run maven.
if [ -f "$LOCAL_SOURCE_DIR/pom.xml" ]; then

  pushd $LOCAL_SOURCE_DIR &> /dev/null
  JAVA_HOME=/etc/alternatives/java_sdk_1.7.0

  if [ -z "$MAVEN_ARGS" ]; then
    export MAVEN_ARGS="package dependency:copy-dependencies -DskipTests -e"
  fi
  echo "Found pom.xml... attempting to build with 'mvn ${MAVEN_ARGS}'"

  mvn --version
  mvn $MAVEN_ARGS $MAVEN_DEBUG_ARGS | tee .mvn.out
  cat .mvn.out | grep "properties used" > .mvn.props
  sed -n 's/.*docker.env.MAIN=\([^, ]*\),.*/\1/p' .mvn.props | head -n 1 > $OUTPUT_DIR/JAVA_MAIN_CLASS

  ERR=$?
  if [ $ERR -ne 0 ]; then
    echo "Aborting due to error code $ERR from mvn package"
    exit $ERR
  fi

  echo "Copying built artifacts from $OUTPUT_DIR into $DEPLOY_DIR for later deployment..."
  popd &> /dev/null
else
  if [ -z "$OUTPUT_DIR" ]; then
    export OUTPUT_DIR="$LOCAL_SOURCE_DIR"
  fi
  echo "Copying binaries in source directory into $DEPLOY_DIR for later deployment..."
fi

if [ -d $OUTPUT_DIR ]; then
  cp -r $OUTPUT_DIR/* $DEPLOY_DIR >& /dev/null
fi

echo "...done"
